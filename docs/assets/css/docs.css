/**
 * Import all styles from the application
 */
/*
 * 00_bits/vars
 * Vars module
 * Contains the grid, colours, and typography variables.
 */
/* end */
/*
 * 00_bits/utils
 * Utils module
 * Contains mixins, functions, and placeholders
 */
/**
 * Mixins.
 * @usage:
 * .selector {
 *   @include mixinName(args);
 * }
 */
/**
 * Placeholders
 * @usage:
 * .selector {
 *   @extend %placeholder;
 * }
 */
.row-alt > [class*="span"].l, .row-alt > [class*="span"]:last-child {
  width: auto;
  float: none;
  overflow: hidden; }

header,
footer,
.group,
[class*="-group"], .row, .row-alt, .row-flush, .nav-tabs, .code-sample, .docolour {
  zoom: 1; }
  header:before,
  footer:before,
  .group:before,
  [class*="-group"]:before, .row:before, .row-alt:before, .row-flush:before, .nav-tabs:before, .code-sample:before, .docolour:before {
    display: table;
    content: ""; }
  header:after,
  footer:after,
  .group:after,
  [class*="-group"]:after, .row:after, .row-alt:after, .row-flush:after, .nav-tabs:after, .code-sample:after, .docolour:after {
    display: table;
    content: "";
    clear: both; }

code, label, input, textarea, select, button, legend, .code-sample > .list-group, .code-sample > .btn-stack {
  box-sizing: border-box; }
  code:before, label:before, input:before, textarea:before, select:before, button:before, legend:before, .code-sample > .list-group:before, .code-sample > .btn-stack:before, code:after, label:after, input:after, textarea:after, select:after, button:after, legend:after, .code-sample > .list-group:after, .code-sample > .btn-stack:after {
    box-sizing: border-box; }

/*
 * 00_bits/sprites
 * Sprites module
 *
 * SCSS variables are information about icon's compiled state, stored under its
 * original file name
 *
 * .icon-home {
 *   width: $icon-home-width;
 * }
 *
 * The large array-like variables contain all information about a single icon
 * $icon-home: x y offset_x offset_y width height total_width total_height image_path;
 */
/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
/*
 * 01_elements/reset
 * Resets module
 */
article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
nav,
section {
  display: block; }

audio, canvas, video {
  display: inline-block;
  *display: inline;
  *zoom: 1; }

audio:not([controls]) {
  display: none; }

img {
  max-width: 100%;
  height: auto;
  border: 0;
  -ms-interpolation-mode: bicubic; }

html {
  font-size: 100%;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%; }

:focus {
  outline: none;
  border: none; }

body {
  margin: 0px;
  padding: 0px;
  background: #fff;
  font-size: 62.5%;
  font-weight: 400;
  font-family: "Helvetica Neue", Helvetica, Arial, "Lucida Grande", sans-serif;
  color: #2d2d2d;
  word-wrap: break-word;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale; }

hr {
  height: 1px;
  margin: 0px 0px 20px 0px;
  padding: 0px;
  border: 0;
  border-bottom: 1px solid #fff;
  border-top: 1px solid #e6e6e6;
  clear: both;
  overflow: 0; }

button {
  font-family: "Helvetica Neue", Helvetica, Arial, "Lucida Grande", sans-serif; }

/*
 * 01_elements/lists
 * Lists module
 */
ul ul,
ul ol,
ol ol,
ol ul {
  margin-bottom: 0; }

ul, ol {
  margin: 0 0 20px;
  color: #2d2d2d; }

ul {
  font-size: 1.6em;
  padding: 0 0 0 22px;
  list-style: disc; }
  ul li {
    line-height: 1.5em;
    margin: 0 0 10px;
    /*all nested*/
    /*expert*/ }
    ul li ul {
      padding-top: 10px;
      font-size: 100%; }
    ul li > ul > li {
      /*madness*/ }
      ul li > ul > li > ul > li {
        /*inception*/ }
        ul li > ul > li > ul > li > ul {
          background: #e8e8e8;
          padding: 20px 50px 10px;
          margin-top: 10px; }

ol {
  font-size: 1.6em;
  padding: 0 0 0 22px;
  list-style: decimal; }
  ol li {
    line-height: 1.5em;
    margin: 0 0 10px;
    /*all nested*/
    /*expert*/ }
    ol li ol {
      padding-top: 10px;
      font-size: 100%; }
    ol li > ol {
      list-style: lower-alpha; }
      ol li > ol > li {
        /*madness*/ }
        ol li > ol > li > ol {
          list-style: upper-roman; }
          ol li > ol > li > ol > li {
            /*inception*/ }
            ol li > ol > li > ol > li > ol {
              list-style: katakana;
              background: #e8e8e8;
              padding: 20px 50px 10px;
              margin-top: 10px; }

/*mixed*/
ul ol {
  padding-top: 10px;
  font-size: 100%; }

ol ul {
  padding-top: 10px;
  font-size: 100%; }

/*
 * 01_elements/typography
 * Typography module
 */
h1,
h2,
h3,
h4,
h5,
h6 {
  margin: 0 0 20px;
  font-weight: 700;
  text-rendering: optimizelegibility;
  line-height: 1.2em; }
  h1 a,
  h2 a,
  h3 a,
  h4 a,
  h5 a,
  h6 a {
    color: #428bca; }
    h1 a:hover,
    h2 a:hover,
    h3 a:hover,
    h4 a:hover,
    h5 a:hover,
    h6 a:hover {
      text-decoration: none; }

h1 {
  font-size: 4.8em; }

h2 {
  font-size: 3.6em; }

h3 {
  font-size: 2.8em; }

h4 {
  font-size: 2.2em; }

h5 {
  font-size: 1.8em; }

h6 {
  font-size: 1.4em; }

p {
  margin: 0;
  padding: 0 0 20px;
  font-size: 1.6em;
  line-height: 1.5em; }

small, .small {
  font-size: 65%;
  line-height: 1; }

strong, b {
  font-weight: 600; }

em, i {
  font-style: italic; }

a {
  color: #428bca;
  text-decoration: none; }

a:hover, a:active {
  outline: 0; }

a:hover {
  color: #245682;
  text-decoration: underline; }

a:focus {
  outline: none;
  border: none; }

pre {
  margin: 0px;
  white-space: pre-wrap;
  font-family: Menlo, Monaco, Consolas, "Courier New", monospace; }

code {
  font-family: Menlo, Monaco, Consolas, "Courier New", monospace;
  padding: 2px 4px;
  color: #428bca; }

/*
 * 01_elements/forms
 * Forms module
 */
label, input, textarea, select, button {
  font-family: "Helvetica Neue", Helvetica, Arial, "Lucida Grande", sans-serif;
  font-size: 1.6em;
  font-weight: 400;
  line-height: 1.5em; }

legend {
  font-family: "Helvetica Neue", Helvetica, Arial, "Lucida Grande", sans-serif;
  font-size: 1.6em;
  line-height: 1.5em;
  width: 100%;
  padding: 20px;
  background: #dedede;
  margin: 0 0 20px; }

label {
  font-family: "Helvetica Neue", Helvetica, Arial, "Lucida Grande", sans-serif;
  display: block;
  font-weight: 700;
  margin: 0 0 5px 0; }

select,
textarea,
input[type="text"],
input[type="password"],
input[type="email"] {
  width: 100%;
  height: 34px;
  padding: 4px;
  margin-left: 0; }

textarea,
input[type="text"],
input[type="password"],
input[type="email"] {
  border-radius: none;
  background-color: #fff;
  border: 1px solid #dedede; }
  textarea:focus,
  input[type="text"]:focus,
  input[type="password"]:focus,
  input[type="email"]:focus {
    border: 1px solid rgba(82, 168, 236, 0.8);
    outline: 0;
    outline: thin dotted \9;
    /* IE6-9 */
    box-shadow: inset 0 5px 5px rgba(0, 0, 0, 0.025), 0 0 2px rgba(82, 168, 236, 0.6); }

select {
  background-color: #fff;
  border: 1px solid #dedede;
  height: 30px;
  line-height: 30px;
  border-radius: 5px; }
  select:focus {
    border: 1px solid rgba(82, 168, 236, 0.8);
    outline: 0;
    outline: thin dotted \9;
    /* IE6-9 */
    outline: 5px auto -webkit-focus-ring-color;
    outline-offset: -2px; }
  select[multiple], select[size] {
    height: auto; }

input[type="file"] {
  display: block;
  width: 100%; }

textarea {
  height: auto;
  overflow: auto; }

button,
input[type="submit"] {
  border-radius: 0px;
  cursor: pointer;
  border: 1px solid #dedede;
  background: none; }
  button:hover,
  input[type="submit"]:hover {
    background: #2d2d2d;
    color: #fff; }
  button:focus,
  input[type="submit"]:focus {
    box-shadow: inset 0 5px 5px rgba(0, 0, 0, 0.025), 0 0 2px rgba(82, 168, 236, 0.6);
    border: 1px solid rgba(82, 168, 236, 0.8);
    outline: 0;
    outline: thin dotted \9; }

fieldset {
  border: none;
  padding: 0;
  margin: 0 0 20px; }

/*
 * 01_elements/tables
 * Tables module
 */
table {
  width: 100%;
  max-width: 100%;
  border-collapse: collapse;
  margin: 0px 0px 10px; }

caption {
  padding: 0px 0px 10px;
  color: #d6d7d8;
  font-size: 1.6em;
  text-align: left; }

thead > tr > th {
  border-bottom: 2px solid #d6d7d8;
  vertical-align: bottom; }

tbody > tr > td, tbody > tr > th {
  border-top: 1px solid #d6d7d8;
  vertical-align: top; }

th, td {
  padding: 10px 5px; }

th {
  text-align: left;
  font-size: 1.6em; }

td {
  font-size: 1.6em; }

/*
 * 02_items/btns
 * Btns module
 */
.btn, input[type="submit"].btn, button.btn {
  display: inline-block;
  *display: inline;
  zoom: 1;
  _height: 20;
  margin: 0 0 20px;
  padding: 10px 15px;
  color: #2d2d2d;
  border: 1px solid #dedede;
  font-size: 1.6em;
  line-height: 1.5em;
  text-align: center;
  cursor: pointer; }
  .btn:hover, input[type="submit"].btn:hover, .active.btn, input.active[type="submit"].btn {
    background: #dedede;
    color: #2d2d2d;
    text-decoration: none; }
  .btn:focus, input[type="submit"].btn:focus {
    border: 1px solid #dedede; }

.btn.-link, input[type="submit"].btn.-link, button.btn.-link {
  color: #2d2d2d;
  border-color: #dedede; }
  .btn.-link:hover, .btn.-link.active, input[type="submit"].btn.-link:hover, input[type="submit"].btn.-link.active, button.btn.-link:hover, button.btn.-link.active {
    background: #428bca;
    color: #fff; }
  .btn.-link:focus, input[type="submit"].btn.-link:focus, button.btn.-link:focus {
    border-color: #dedede; }

.btn.-main, input[type="submit"].btn.-main, button.btn.-main {
  background: #c8864b;
  background: linear-gradient(to bottom, #c68143 0%, #c8864b 100%);
  color: #fff;
  border-color: #c68143; }
  .btn.-main:hover, .btn.-main.active, input[type="submit"].btn.-main:hover, input[type="submit"].btn.-main.active, button.btn.-main:hover, button.btn.-main.active {
    background: #fff;
    color: #c68143; }
  .btn.-main:focus, input[type="submit"].btn.-main:focus, button.btn.-main:focus {
    border-color: #c68143; }

.btn.-info, input[type="submit"].btn.-info, button.btn.-info {
  background: #6fdbf0;
  background: linear-gradient(to bottom, #66d9ef 0%, #6fdbf0 100%);
  color: #fff;
  border-color: #66d9ef; }
  .btn.-info:hover, .btn.-info.active, input[type="submit"].btn.-info:hover, input[type="submit"].btn.-info.active, button.btn.-info:hover, button.btn.-info.active {
    background: #fff;
    color: #66d9ef; }
  .btn.-info:focus, input[type="submit"].btn.-info:focus, button.btn.-info:focus {
    border-color: #66d9ef; }

.btn.-success, input[type="submit"].btn.-success, button.btn.-success {
  background: #63bb63;
  background: linear-gradient(to bottom, #5cb85c 0%, #63bb63 100%);
  color: #fff;
  border-color: #5cb85c; }
  .btn.-success:hover, .btn.-success.active, input[type="submit"].btn.-success:hover, input[type="submit"].btn.-success.active, button.btn.-success:hover, button.btn.-success.active {
    background: #fff;
    color: #5cb85c; }
  .btn.-success:focus, input[type="submit"].btn.-success:focus, button.btn.-success:focus {
    border-color: #5cb85c; }

.btn.-warning, input[type="submit"].btn.-warning, button.btn.-warning {
  background: #e8dd7d;
  background: linear-gradient(to bottom, #e6db74 0%, #e8dd7d 100%);
  color: #fff;
  border-color: #e6db74; }
  .btn.-warning:hover, .btn.-warning.active, input[type="submit"].btn.-warning:hover, input[type="submit"].btn.-warning.active, button.btn.-warning:hover, button.btn.-warning.active {
    background: #fff;
    color: #e6db74; }
  .btn.-warning:focus, input[type="submit"].btn.-warning:focus, button.btn.-warning:focus {
    border-color: #e6db74; }

.btn.-error, input[type="submit"].btn.-error, button.btn.-error {
  background: #db5b57;
  background: linear-gradient(to bottom, #d9534f 0%, #db5b57 100%);
  color: #fff;
  border-color: #d9534f; }
  .btn.-error:hover, .btn.-error.active, input[type="submit"].btn.-error:hover, input[type="submit"].btn.-error.active, button.btn.-error:hover, button.btn.-error.active {
    background: #fff;
    color: #d9534f; }
  .btn.-error:focus, input[type="submit"].btn.-error:focus, button.btn.-error:focus {
    border-color: #d9534f; }

/*
 * 02_items/callouts
 * Callouts module
 */
.callout {
  margin: 0 0 20px;
  padding: 15px;
  border-radius: 5px;
  background: white;
  border: 1px solid #f8f8f8;
  color: #929292;
  font-size: 1.6em; }

.callout.-main {
  background: #ead0b8;
  border: 1px solid #d29b6a;
  color: #56361a; }

.callout.-info {
  background: #f1fbfd;
  border: 1px solid #94e4f4;
  color: #1292aa; }

.callout.-success {
  background: #c7e6c7;
  border: 1px solid #80c780;
  color: #255625; }

.callout.-warning {
  background: #fdfdf6;
  border: 1px solid #eee69f;
  color: #a4971d; }

.callout.-error {
  background: #f4cecd;
  border: 1px solid #e27c79;
  color: #761c19; }

/*
 * 02_items/headings
 * Headings module
 */
.heading.-serif {
  font-family: "Georgia", "Times New Roman", Times, serif; }

.label {
  color: #d6d7d8;
  margin: 0px;
  padding: 5px;
  border: 1px solid #dedede;
  border-bottom: none;
  display: inline-block; }

/*
 * 02_items/gen
 * Gen module
 */
.intro {
  font-size: 2em; }

.intro.-spaced {
  padding: 0 0 40px; }

/*
 * 02_items/icons
 * Icons module
 */
.icon {
  display: block; }
  .icon.-twitter {
    background-image: url(../img/sprite.svg?v=2);
    background-position: -5px -35px;
    width: 20px;
    height: 20px; }
    .lt-ie9 .icon.-twitter {
      background-image: url(../img/sprite.png); }
  .icon.-dribbble {
    background-image: url(../img/sprite.svg?v=2);
    background-position: -5px -5px;
    width: 20px;
    height: 20px; }
    .lt-ie9 .icon.-dribbble {
      background-image: url(../img/sprite.png); }
  .icon.-instagram {
    background-image: url(../img/sprite.svg?v=2);
    background-position: -35px -5px;
    width: 20px;
    height: 20px; }
    .lt-ie9 .icon.-instagram {
      background-image: url(../img/sprite.png); }

.arrow {
  display: block;
  width: 0;
  height: 0; }
  .arrow.-up {
    border-left: 10px solid transparent;
    border-right: 10px solid transparent;
    border-bottom: 10px solid #2d2d2d; }
  .arrow.-right {
    border-top: 10px solid transparent;
    border-bottom: 10px solid transparent;
    border-left: 10px solid #2d2d2d; }
  .arrow.-down {
    border-top: 10px solid #2d2d2d;
    border-right: 10px solid transparent;
    border-left: 10px solid transparent; }
  .arrow.-left {
    border-top: 10px solid transparent;
    border-right: 10px solid #2d2d2d;
    border-bottom: 10px solid transparent; }

/*
 * 03_collections/boxes
 * Styles for boxes
 */
.box {
  margin: 0 0 40px;
  padding: 0px;
  background: #fff; }

.box__header {
  padding: 10px 20px;
  background: #dedede; }

.box__heading {
  margin: 0;
  color: #2d2d2d;
  font-weight: 400; }

.box__body {
  padding: 20px 19px 0px;
  border-left: 1px solid #dedede;
  border-right: 1px solid #dedede; }
  .box__body.-cont {
    padding: 0px 19px; }
  .box__body.-end {
    border-bottom: 1px solid #dedede; }

.box__footer {
  border: 1px solid #dedede;
  padding: 5px 19px; }

.box.-main .box__header {
  background: #c68143; }

.box.-main .box__heading {
  color: #fff; }

.box.-info .box__header {
  background: #66d9ef; }

.box.-info .box__heading {
  color: #fff; }

.box.-success .box__header {
  background: #5cb85c; }

.box.-success .box__heading {
  color: #fff; }

.box.-warning .box__header {
  background: #e6db74; }

.box.-warning .box__heading {
  color: #fff; }

.box.-error .box__header {
  background: #d9534f; }

.box.-error .box__heading {
  color: #fff; }

/*
 * 02_items/dropdowns
 * Styles for specialized anchors list (dropdowns)
 */
.dropdown .btn, .dropdown input[type="submit"].btn {
  position: relative;
  padding-right: 40px;
  margin: 0px;
  font-size: 100%; }

.dropdown .list-group {
  border-radius: 0px;
  display: none;
  position: absolute;
  top: 100%;
  left: -1px;
  width: 150%;
  z-index: 100; }
  .dropdown .list-group li:first-child {
    border-radius: 0px; }

.dropdown li {
  text-align: left; }
  .dropdown li:hover {
    background: #dedede; }

.dropdown .arrow {
  position: absolute;
  right: 10px;
  top: 50%;
  margin-top: -5px; }

.dropdown__selected {
  font-size: 1.6em; }

.dropdown.-hover .btn:hover > .list-group {
  display: block; }

.dropdown.-js .active.btn > .list-group {
  display: block; }

/*
 * 03_collections/btngroups
 * Styles for button groups
 */
.btn-group {
  margin: 0 0 20px; }
  .btn-group .btn, .btn-group input[type="submit"].btn {
    border-radius: 0px;
    position: relative;
    float: left;
    margin-bottom: 0;
    margin-left: -1px;
    border-right-width: 0px; }
    .btn-group .btn:first-child {
      border-radius: 5px 0px 0px 5px; }
    .btn-group .btn:last-child, .btn-group .l.btn {
      border-radius: 0px 5px 5px 0px;
      border-right-width: 1px; }

.btn-stack .btn, .btn-stack input[type="submit"].btn {
  border-radius: 0px;
  display: block;
  position: relative;
  margin-bottom: 0;
  margin-left: -1px;
  text-align: left;
  border-bottom-width: 0px; }
  .btn-stack .btn:first-child {
    border-radius: 5px 5px 0px 0px; }
  .btn-stack .btn:last-child, .btn-stack .l.btn {
    border-radius: 0px 0px 5px 5px;
    border-bottom-width: 1px; }

/*
 * 03_collections/formgroups
 * Styles for form groups
 */
.form__group {
  margin: 0 0 20px; }

.form__text {
  padding: 3px 0px;
  margin: 0px;
  font-size: 1.4em; }

.radio, .checkbox {
  margin: 0 0 20px; }
  .radio label, .checkbox label {
    font-weight: normal; }

.checkbox label {
  margin: 0; }

.form--inline .form__group {
  display: inline-block;
  padding-right: 10px; }

.form--inline .form__checkbox {
  display: inline-block;
  padding-right: 10px; }

.form--inline button {
  display: inline-block; }

/*
 * 02_items/listgroups
 * Styles for specialized lists (listgroups)
 */
ul.list-group {
  margin: 0 0 20px;
  padding: 0;
  list-style: none;
  font-size: 100%; }

.list-group {
  border-radius: 5px;
  margin: 0 0 20px;
  background: #fff;
  border: 1px solid #dedede;
  border-top: none; }
  .list-group li {
    margin: 0;
    padding: 10px;
    border-top: 1px solid #dedede;
    color: #2d2d2d;
    font-size: 1.6em;
    line-height: 1.5em; }
    .list-group li:last-child {
      border-radius: 0px 0px 5px 5px; }
    .list-group li:first-child {
      border-radius: 5px 5px 0px 0px; }
  .list-group a {
    display: block; }

.nav {
  margin: 0px;
  padding: 0px;
  list-style: none;
  font-size: 100%; }
  .nav li {
    float: left;
    margin: 0px 10px 0px 0px; }
  .nav a {
    display: block;
    font-size: 1.6em; }

/*
 * 04_sections/header
 * Styles for header section
 */
/*
 * 04_sections/nav
 * Styles for nav section
 */
.site__nav {
  margin: 0 0 20px; }

/*
 * 04_sections/main
 * Styles for main section
 */
/*
 * 04_sections/sidebar
 * Styles for sidebar section
 */
/*
 * 04_sections/footer
 * Styles for footer section
 */
/*
 * 05_layouts/site
 * Site layout styles
 */
.container {
  padding-left: 3.183%;
  padding-right: 3.183%; }

.section {
  padding-bottom: 20px; }

[class*="row-fluid"] > [class*="span"] .inner,
.row-static > [class*="span"] .inner {
  padding: 20px; }

/*
 * Row generator
 */
/*
 * Basic row
 */
.row {
  width: 100%;
  width: 93.634%;
  padding: 0 3.183%; }
  .row > [class*="span"] {
    float: left;
    margin-right: 3.183%; }
    .row > [class*="span"].l {
      margin-right: 0; }
    .row > [class*="span"]:last-child {
      margin-right: 0; }
  .row > .span1 {
    width: 5.41557%; }
  .row > .span2 {
    width: 14.01413%; }
  .row > .span3 {
    width: 22.6127%; }
  .row > .span4 {
    width: 31.21127%; }
  .row > .span5 {
    width: 39.80983%; }
  .row > .span6 {
    width: 48.4084%; }
  .row > .span7 {
    width: 57.00697%; }
  .row > .span8 {
    width: 65.60553%; }
  .row > .span9 {
    width: 74.2041%; }
  .row > .span10 {
    width: 82.80267%; }
  .row > .span11 {
    width: 91.40123%; }
  .row > .span12 {
    width: 99.9998%; }

/*
 * Row using overflow hidden
 */
.row-alt {
  width: 100%; }
  .row-alt > [class*="span"] {
    float: left;
    margin-right: 3.183%; }
    .row-alt > [class*="span"].l {
      margin-right: 0; }
    .row-alt > [class*="span"]:last-child {
      margin-right: 0; }
  .row-alt > .span1 {
    width: 5.41557%; }
  .row-alt > .span2 {
    width: 14.01413%; }
  .row-alt > .span3 {
    width: 22.6127%; }
  .row-alt > .span4 {
    width: 31.21127%; }
  .row-alt > .span5 {
    width: 39.80983%; }
  .row-alt > .span6 {
    width: 48.4084%; }
  .row-alt > .span7 {
    width: 57.00697%; }
  .row-alt > .span8 {
    width: 65.60553%; }
  .row-alt > .span9 {
    width: 74.2041%; }
  .row-alt > .span10 {
    width: 82.80267%; }
  .row-alt > .span11 {
    width: 91.40123%; }
  .row-alt > .span12 {
    width: 99.9998%; }
  .row-alt > [class*="span"].l {
    margin-right: 0; }
  .row-alt > [class*="span"]:last-child {
    margin-right: 0; }

/*
 * fluid row no gutter
 */
.row-flush {
  width: 100%; }
  .row-flush > [class*="span"] {
    float: left;
    margin-right: 0%; }
    .row-flush > [class*="span"].l {
      margin-right: 0; }
    .row-flush > [class*="span"]:last-child {
      margin-right: 0; }
  .row-flush > .span1 {
    width: 8.33332%; }
  .row-flush > .span2 {
    width: 16.66663%; }
  .row-flush > .span3 {
    width: 24.99995%; }
  .row-flush > .span4 {
    width: 33.33327%; }
  .row-flush > .span5 {
    width: 41.66658%; }
  .row-flush > .span6 {
    width: 49.9999%; }
  .row-flush > .span7 {
    width: 58.33322%; }
  .row-flush > .span8 {
    width: 66.66653%; }
  .row-flush > .span9 {
    width: 74.99985%; }
  .row-flush > .span10 {
    width: 83.33317%; }
  .row-flush > .span11 {
    width: 91.66648%; }
  .row-flush > .span12 {
    width: 99.9998%; }

/*
 * Responsive
 */
@media (max-width: 59.9375em) {
  /*margin right instead of margin left to do overflow hidden*/
  [class*="row"] > [class*="span"] {
    float: none;
    width: auto;
    margin-right: 0; }
  /*Use this to set exact percentages and have the last box be ok*/
  [class*="row"] > [class*="span"]:last-child {
    overflow: visible; } }

/*
 * 05_layouts/etc
 * Etc module.
 * SHOULD be empty when going to production
 * this is a temporary bucket at the highest level
 * of the scss tree for temporary styles/sandboxing.
 * SHOULD also be used for styles not inherent to the
 * app or website but rather to the framework it was
 * built in (eg. Drupal admin specific styles).
 */
/**
 * Drupal Specific
 */
.element-invisible {
  display: none; }

#admin-menu-wrapper ul {
  font-size: 100%; }

#admin-menu .dropdown li {
  line-height: 1.2em; }

.page-user {
  background: #fff; }

/**
 * Drupal Tabs
 */
.nav-tabs {
  margin: 0px;
  padding: 10px;
  list-style: none;
  font-size: 100%; }
  .nav-tabs li {
    float: left;
    margin: 0 2px 0 0; }
  .nav-tabs a {
    border-radius: 5px;
    background: #c68143;
    color: #fff;
    display: block;
    padding: 5px 10px;
    font-weight: 700;
    font-size: 1.2em; }
    .nav-tabs a:hover {
      text-decoration: none;
      background: #a46832; }

/**
 * Drupal Login
 */
#user-login {
  width: 280px;
  padding: 20px;
  margin: 0 auto; }
  #user-login .form-item {
    margin: 0 0 20px; }

/**
 * Documentation styles
 * These styles should not be included in styles.css for the main application
 */
.doc__header {
  padding: 20px 0px 0px; }
  .doc__header.-styleguide {
    border-bottom: 1px solid #dedede; }

pre.prettyprint.prettyprinted {
  visibility: visible;
  padding: 0px;
  border: none;
  background: none; }

.prettyprint {
  visibility: hidden;
  white-space: pre;
  background: #dedede; }
  .prettyprint ol.linenums {
    overflow: auto;
    font-size: 100%;
    counter-reset: li;
    border-top: 1px solid #dedede;
    border-left: 1px solid #dedede;
    padding: 0px 0px 0px 40px;
    margin: 0px;
    background: #2d2d2d; }
    .prettyprint ol.linenums > li {
      display: block;
      float: left;
      clear: both;
      white-space: pre;
      position: relative;
      margin: 0px;
      padding: 4px 10px 4px 10px;
      list-style: none;
      font-size: 1.6em;
      line-height: 1.2em;
      background: none; }
      .prettyprint ol.linenums > li:hover:before {
        color: #66d9ef; }
      .prettyprint ol.linenums > li:before {
        position: absolute;
        right: 100%;
        top: 0px;
        padding: 4px 10px 0px 0px;
        text-align: right;
        font-size: .60em;
        font-family: "Helvetica Neue", Helvetica, Arial, "Lucida Grande", sans-serif;
        font-weight: 200;
        color: #d6d7d8;
        content: counter(li);
        counter-increment: li;
        -webkit-touch-callout: none;
        /* iOS Safari */
        -webkit-user-select: none;
        /* Chrome/Safari/Opera */
        /* Konqueror */
        -moz-user-select: none;
        /* Firefox */
        -ms-user-select: none;
        /* Internet Explorer/Edge */
        user-select: none;
        /* Non-prefixed version, currently not supported by any browser */ }
  .prettyprint .com {
    color: #737373; }
  .prettyprint .dec {
    color: #dedede; }
  .prettyprint .pln, .prettyprint .lit {
    color: #fff; }
  .prettyprint .pun {
    color: #fff; }
  .prettyprint .str {
    color: #66d9ef; }
  .prettyprint .atn {
    color: #e6db74; }
  .prettyprint .atv {
    color: #66d9ef; }
  .prettyprint .tag, .prettyprint .kwd {
    color: #c68143; }

.code-sample {
  border-top: 1px solid #dedede;
  padding: 10px 0px; }
  .code-sample > .arrow, .code-sample > .icon, .code-sample > .dropdown {
    float: left;
    margin: 0 10px 0 0; }
  .code-sample > .box {
    margin: 0px; }
  .code-sample > .list-group, .code-sample > .btn-stack {
    float: left;
    width: 49.5%; }
    .code-sample > .list-group:first-child, .code-sample > .btn-stack:first-child {
      margin-right: 1%; }
  .code-sample [class^="row"] {
    background: #c2f0f9; }
    .code-sample [class^="row"] [class*="span"] {
      background: #66d9ef; }

.docolour {
  margin: 0 0 20px; }

.docolour__heading {
  clear: both;
  margin: 0 0 5px;
  text-transform: capitalize; }

.docolour__box {
  height: 40px;
  width: 40px;
  float: left; }

.footnote {
  display: block;
  padding: 0px;
  margin: 0px;
  background: none;
  text-align: right;
  font-size: 1.4em; }

[ng\:cloak], [ng-cloak], [data-ng-cloak], [x-ng-cloak], .ng-cloak, .x-ng-cloak {
  display: none !important; }

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
